#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: X86_pve自动编译

on:
  push:
    branches: [ master ]
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          df -h

      - name: Add OpenClash And SmartDNS
        run: |
          git clone -b master https://github.com/vernesong/OpenClash.git
          OPENCLASH_TUN_VERSION=$(sed -n '2p' OpenClash/core_version)
          CPU_MODEL=amd64
          echo '
          config openclash 'config'
            option proxy_port '7892'
            option update '0'
            option auto_update '0'
            option auto_update_time '0'
            option cn_port '9090'
            option enable_redirect_dns '1'
            option dns_advanced_setting '0'
            option servers_if_update '0'
            option servers_update '0'
            option log_level 'silent'
            option lan_ac_mode '0'
            option config_path '/etc/openclash/config/config.yaml'
            option core_version 'linux-${CPU_MODEL}'
            option enable_rule_proxy '1'
            option intranet_allowed '1'
            option http_port '7890'
            option socks_port '7891'
            option enable_custom_dns '1'
            option disable_masq_cache '1'
            option enable_custom_clash_rules '1'
            option other_rule_auto_update '1'
            option other_rule_update_week_time '*'
            option other_rule_update_day_time '2'
            option geo_auto_update '1'
            option geo_update_week_time '*'
            option geo_update_day_time '3'
            option dns_port '7874'
            option create_config '1'
            option redirect_dns '1'
            option masq_cache '1'
            option operation_mode 'redir-host'
            option en_mode 'redir-host'
            option dns_revert '0'
            option proxy_mode 'rule'
            option dashboard_password 'openwrt'
            option rule_sources 'ConnersHua'
            option rule_source 'ConnersHua'
            option GlobalTV 'GlobalTV'
            option AsianTV 'AsianTV'
            option Proxy 'Proxy'
            option Domestic 'Domestic'
            option Others 'Others'
            option china_ip_route '1'
          	option enable '1'
          	option en_mode 'redir-host-mix'
          	option stack_type 'system'
          	option config_reload '1'

          config dns_servers
            option group 'nameserver'
            option type 'udp'
            option enabled '0'
            option ip '114.114.114.114'

          config dns_servers
            option group 'nameserver'
            option type 'udp'
            option ip '119.29.29.29'
            option enabled '0'

          config dns_servers
            option ip '8.8.8.8'
            option port '853'
            option type 'tls'
            option enabled '0'
            option group 'fallback'

          config dns_servers
            option ip '1.1.1.1/dns-query'
            option type 'https'
            option enabled '0'
            option group 'fallback'

          config dns_servers
            option ip '1.1.1.1'
            option port '853'
            option type 'tls'
            option enabled '0'
            option group 'fallback'

          config dns_servers
            option enabled '1'
            option group 'nameserver'
            option ip '127.0.0.1'
            option port '6053'
            option type 'tcp'

          config dns_servers
            option enabled '1'
            option ip '127.0.0.1'
            option port '7053'
            option group 'fallback'
            option type 'tcp'
          ' >> OpenClash/luci-app-openclash/files/etc/config/openclash
          git clone -b master https://github.com/pymumu/smartdns.git
          echo '
          config smartdns
            option server_name 'smartdns'
            option port '6053'
            option ipv6_server '0'
            option dualstack_ip_selection '0'
            option prefetch_domain '1'
            option serve_expired '0'
            option redirect 'none'
            option rr_ttl_min '300'
            option seconddns_port '7053'
            option seconddns_no_rule_addr '0'
            option seconddns_no_rule_nameserver '0'
            option seconddns_no_rule_ipset '0'
            option seconddns_no_rule_soa '0'
            option coredump '0'
            option enabled '1'
            option seconddns_enabled '1'
            option seconddns_no_dualstack_selection '1'
            option force_aaaa_soa '1'
            option cache_size '512'
            option seconddns_server_group 'foreign'
            option tcp_server '1'
            option seconddns_tcp_server '1'
            option seconddns_no_cache '1'
            option seconddns_no_speed_check '1'

          config server
            option type 'udp'
            option ip '8.8.8.8'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option type 'udp'
            option ip '8.8.4.4'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option type 'udp'
            option ip '1.1.1.1'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option ip '1.0.0.1'
            option type 'udp'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option type 'udp'
            option ip '4.2.2.1'
            option enabled '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'

          config server
            option type 'udp'
            option ip '4.2.2.2'
            option enabled '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'

          config server
            option type 'udp'
            option ip '119.29.29.29'
            option enabled '0'

          config server
            option type 'udp'
            option ip '119.28.28.28'
            option enabled '0'

          config server
            option type 'udp'
            option ip '223.5.5.5'
            option enabled '0'

          config server
            option type 'udp'
            option enabled '0'
            option ip '223.6.6.6'

          config server
            option ip '8.8.8.8'
            option type 'tcp'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option ip '8.8.4.4'
            option type 'tcp'
            option blacklist_ip '0'
            option server_group 'foreign'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option ip '1.1.1.1'
            option type 'tcp'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option ip '1.0.0.1'
            option type 'tcp'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '0'

          config server
            option ip '4.2.2.1'
            option type 'tcp'
            option enabled '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'

          config server
            option ip '4.2.2.2'
            option enabled '0'
            option type 'tcp'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'

          config server
            option enabled '0'
            option ip '119.29.29.29'
            option type 'tcp'

          config server
            option enabled '0'
            option ip '119.28.28.28'
            option type 'tcp'

          config server
            option enabled '0'
            option ip '223.5.5.5'
            option type 'tcp'

          config server
            option enabled '0'
            option ip '223.6.6.6'
            option type 'tcp'

          config server
            option ip '8.8.8.8'
            option type 'tls'
            option no_check_certificate '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '1'

          config server
            option ip '8.8.4.4'
            option type 'tls'
            option enabled '0'
            option no_check_certificate '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'

          config server
            option ip '1.1.1.1'
            option type 'tls'
            option no_check_certificate '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '1'

          config server
            option ip '1.0.0.1'
            option type 'tls'
            option enabled '0'
            option no_check_certificate '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'

          config server
            option ip 'dns.pub'
            option type 'tls'
            option no_check_certificate '0'
            option enabled '1'

          config server
            option enabled '0'
            option ip 'doh.pub'
            option type 'tls'
            option no_check_certificate '0'

          config server
            option ip '223.5.5.5'
            option type 'tls'
            option no_check_certificate '0'
            option enabled '1'

          config server
            option enabled '0'
            option ip '223.6.6.6'
            option type 'tls'
            option no_check_certificate '0'

          config server
            option ip 'https://1.1.1.1/dns-query'
            option type 'https'
            option no_check_certificate '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '1'

          config server
            option ip 'https://8.8.8.8/dns-query'
            option type 'https'
            option no_check_certificate '0'
            option server_group 'foreign'
            option blacklist_ip '0'
            option addition_arg '-exclude-default-group'
            option enabled '1'

          config server
            option ip 'https://doh.pub/dns-query'
            option type 'https'
            option no_check_certificate '0'
            option enabled '1'

          config server
            option ip 'https://223.5.5.5/dns-query'
            option type 'https'
            option no_check_certificate '0'
            option enabled '1'
          ' > smartdns/package/openwrt/files/etc/config/smartdns
          cat >> smartdns/package/openwrt/custom.conf <<EOF


          speed-check-mode tcp:443,ping
          EOF
          git clone -b openwrt-18.06-dev https://github.com/project-openwrt/openwrt.git
          cat smartdns/package/openwrt/files/etc/config/smartdns > openwrt/package/ntlf9t/smartdns/conf/smartdns.conf
          cat smartdns/package/openwrt/custom.conf > openwrt/package/ntlf9t/smartdns/conf/custom.conf
          mv OpenClash/luci-app-openclash package/lean/
          mv openwrt/package/ntlf9t/luci-app-smartdns package/lean/luci-app-smartdns
          mv openwrt/package/ntlf9t/smartdns package/lean/
          mkdir -p package/base-files/files/etc/openclash/core
          curl -L https://github.com/vernesong/OpenClash/releases/download/TUN/clash-linux-${CPU_MODEL}.tar.gz | tar zxf -
          chmod +x clash
          mv clash package/base-files/files/etc/openclash/core/clash_game
          curl -L https://github.com/vernesong/OpenClash/releases/download/Clash/clash-linux-${CPU_MODEL}.tar.gz | tar zxf -
          chmod +x clash
          mv clash package/base-files/files/etc/openclash/core/
          curl -OL https://github.com/vernesong/OpenClash/releases/download/TUN-Premium/clash-linux-${CPU_MODEL}-${OPENCLASH_TUN_VERSION}.gz
          gzip -d clash-linux-${CPU_MODEL}-${OPENCLASH_TUN_VERSION}.gz
          chmod +x clash-linux-${CPU_MODEL}-${OPENCLASH_TUN_VERSION}
          mv clash-linux-${CPU_MODEL}-${OPENCLASH_TUN_VERSION} package/base-files/files/etc/openclash/core/clash_tun

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          #git clone https://github.com/rosywrt/luci
          #mv luci/themes/luci-theme-rosy package/lean/
          #rm -rf luci/
          #sed -i 's/..\/..\/luci.mk/$(TOPDIR)\/feeds\/luci\/luci.mk/' package/lean/luci-theme-rosy/Makefile
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          rm -rf package/lean/luci-theme-argon && mv luci-theme-argon package/lean/
          sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' package/lean/default-settings/files/zzz-default-settings
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config

          # 编译x64固件:
          # cat >> .config <<EOF
          # CONFIG_TARGET_x86=y
          # CONFIG_TARGET_x86_64=y
          # CONFIG_TARGET_x86_64_Generic=y
          # EOF

          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF

          # 编译UEFI固件:
          cat >> .config <<EOF
          CONFIG_EFI_IMAGES=y
          EOF

          # 扩容固件:
          cat >> .config <<EOF
          CONFIG_TARGET_KERNEL_PARTSIZE=200
          CONFIG_TARGET_ROOTFS_PARTSIZE=820
          EOF

          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF

          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF

          # USB3.0支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          # CONFIG_PACKAGE_kmod-usb3=y
          # EOF

          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-cifsd=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-statistics=y
          CONFIG_PACKAGE_luci-app-vnstat=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_smartdns=y
          CONFIG_PACKAGE_luci-app-smartdns=y
          # CONFIG_PACKAGE_luci-app-amule is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-ramfree is not set
          # CONFIG_PACKAGE_luci-app-samba is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-app-zerotier=y
          EOF

          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_luci-theme-rosy=y
          EOF

          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_collectd-mod-ping=y
          CONFIG_PACKAGE_collectd-mod-cpufreq=y
          CONFIG_PACKAGE_collectd-mod-thermal=y
          # CONFIG_PACKAGE_automount is not set
          # CONFIG_PACKAGE_autosamba is not set
          EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF

          # 编译PVE镜像并添加Guest Agent支持:
          cat >> .config <<EOF
          CONFIG_QCOW2_IMAGES=y
          CONFIG_PACKAGE_qemu-ga=y
          EOF

          # Extra config
          cat >> .config <<EOF
          CONFIG_OPENSSL_WITH_DTLS=y
          CONFIG_OPENSSL_WITH_EC2M=y
          CONFIG_OPENSSL_WITH_NPN=y
          # CONFIG_OPENSSL_ENGINE_BUILTIN_AFALG is not set
          # CONFIG_OPENSSL_ENGINE_BUILTIN_DEVCRYPTO is not set
          # CONFIG_FEED_rosy is not set
          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(($(nproc) + 1)) -s || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/


      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
